# Multi-stage build for ByteChat (React + Flask)
FROM node:18-alpine as react-build

# Build React frontend
WORKDIR /app/frontend
COPY React/frontend/package*.json ./
RUN npm ci --only=production
COPY React/frontend/ ./
RUN npm run build

# Python Flask backend stage
FROM python:3.12-slim as backend

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash --uid 1000 app

# Set working directory
WORKDIR /app

# Copy and install Python dependencies
COPY requirements_docker.txt .
RUN pip install --no-cache-dir -r requirements_docker.txt

# Copy Flask backend
COPY app.py .
COPY messages.db* ./

# Copy built React frontend to Flask static directory
COPY --from=react-build /app/frontend/build ./static

# Create directory for SQLite database and logs
RUN mkdir -p /app/data /app/logs && \
    chown -R app:app /app

# Switch to non-root user
USER app

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:5000/ || exit 1

# Environment variables
ENV FLASK_ENV=production
ENV PORT=5000
ENV PYTHONUNBUFFERED=1

# Run the application
CMD ["python", "app.py"]
